# The name of this node, used for static cluster bootstraping
# each node must have a unique name
export DISTRAFT_NAME='default'

# Server peer networking configuration, communication between cluster members
export DISTRAFT_HOST='127.0.0.1'
export DISTRAFT_UDP_PORT='9000'

# Server client networking configuration, communication between client/server
export DISTRAFT_CLIENT_HOST='127.0.0.1'
export DISTRAFT_TCP_PORT='5000'

# Comma-separated list of cluster members of this cluster, includding the node itself
# Format: <node_name>=<peer_host>:<peer_udp_port:<client_host>:<client_tcp_port>,...
# The below example creates a 3-node cluster in local host with nodes: 
#   default => Peer addres: 127.0.0.1:9000, Client address: 127.0.0.1:5000
#   server1 => Peer addres: 127.0.0.1:9001, Client address: 127.0.0.1:5001
#   server2 => Peer addres: 127.0.0.1:9002, Client address: 127.0.0.1:5002
export DISTRAFT_CLUSTER=default=127.0.0.1:9000:127.0.0.1:5000,server1=127.0.0.1:9001:127.0.0.1:5001,server2=127.0.0.1:9002:127.0.0.1:5002

# path where the persistent log will be written to
export DISTRAFT_LOG_PATH='/etc/distraft/'

# path where the state machine and local state store will be written to
export DISTRAFT_DATA_PATH='/etc/distraft/'

# float: the ratio/spread the timeouts will have when randomizing (defaults to double the timeout)
export DISTRAFT_TIMEOUT_SPREAD_RATIO='2.0'

# float: heartbeat timeouts (wait between each heartbeat)
# should be lower than election timeout
# this is the lower end, the full interval/spreas is calculated by:
# `HEARTBEAT_TIMEOUT` * `TIMEOUT_SPREAD_RATIO`
export DISTRAFT_HEARTBEAT_TIMEOUT='0.100'

# int: how many heartbeats can be un-answered before a leader becomes a follower
export DISTRAFT_MISSED_HEARTBEATS='5'

# float: election timeouts (wait before becoming a candidate/follower)
# should be greater than heartbeat timeout
# this is the lower end, the full interval/spreas is calculated by:
# `ELECTION_TIMEOUT_LOWER` * `TIMEOUT_SPREAD_RATIO`
export DISTRAFT_ELECTION_TIMEOUT='0.500'

# boolean: reset logs, state data and state machine on start-up
export DISTRAFT_RESET_LOGS='False'

# boolean: return nicely-formatted json on http responses
export DISTRAFT_PRETTY_PRINT_RESPONSES='False'

# boolean: web server debug mode
export DISTRAFT_WEB_SERVER_DEBUG='False'

# log-level (logs are printed to stderr/stdout)
export DISTRAFT_LOG_LEVEL='INFO'

# network and data serializer (json or msgpack *only*)
export DISTRAFT_SERIALIZER='json'
